<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to you under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at
		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">




	<simple-method method-name="createLead"
		short-description="">
		<if>
			<condition>
				<if-empty field="parameters.firstName" />
			</condition>
			<then>
				<add-error>
					<fail-property resource="MarketingUiLabels" property="SfaCompanyNameMissingError" />
				</add-error>
			</then>
		</if>
		<check-errors />
		<set field="createPersonCtx.firstName" value="${parameters.firstName}" />
		<set field="createPersonCtx.lastName" value="${parameters.lastName}" />
		<set field="createPersonCtx.middleName" value="${parameters.middleName}" />
		<set field="createPersonCtx.assistantName" value="${parameters.assistantName}" />
		<set field="createPersonCtx.statusId" value="PTYLEAD_ASSIGNED" />
		<call-service service-name="createPerson" in-map-name="createPersonCtx">
			<result-to-field result-name="partyId" field="partyId" />
		</call-service>

        <set field="parameters.partyId" value="${partyId}" />
        <set field="createRoleCtx.partyId" value="${partyId}" />
		<set field="createRoleCtx.partyId" value="${partyId}" />
		<set field="createRoleCtx.roleTypeId" value="PROSPECT_LEAD" />
		<call-service service-name="createPartyRole" in-map-name="createRoleCtx" />


		<make-value value-field="newEntity" entity-name="Party" />
		<set value="${partyId}" field="newEntity.partyId" />
		<set from-field="parameters.industryType" field="newEntity.industryType" />
		<set from-field="parameters.industrySubType" field="newEntity.industrySubType" />
		<set from-field="parameters.empCount" field="newEntity.empCount" />
		<set from-field="parameters.preferredCurrencyUomId" field="newEntity.preferredCurrencyUomId" />
		<set from-field="parameters.annualRevenue" field="newEntity.annualRevenue" />
		<set from-field="parameters.revenueSlab" field="newEntity.revenueSlab" />
		<set from-field="parameters.salesTurnOver" field="newEntity.salesTurnOver" />
		<set from-field="parameters.numStores" field="newEntity.numStores" />
		<set from-field="parameters.transactionalSideId" field="newEntity.transactionalSideId" />
		<set from-field="parameters.dataSourceId" field="newEntity.dataSourceId" />
		<store-value value-field="newEntity" />

		<set field="leadContactPartyId" value="${partyId}" />

		<if-not-empty field="parameters.USER_FAX_CONTACT">

			<set from-field="parameters.USER_FAX_COUNTRY" field="newEntityContact.countryCode" />
			<set from-field="parameters.USER_FAX_AREA" field="newEntityContact.areaCode" />
			<set from-field="parameters.USER_FAX_CONTACT" field="newEntityContact.USER_FAX_CONTACT" />
			<set from-field="parameters.USER_FAX_EXT" field="newEntityContact.askForName" />
			<set from-field="leadContactPartyId" field="newEntityContact.partyId" />
			<set value="FAX_NUMBER" field="newEntityContact.contactMechPurposeTypeId" />
			<clear-field field="newEntity" />

			<call-service service-name="createPartyTelecomNumber"
				in-map-name="newEntityContact" break-on-error="true" />
			<clear-field field="newEntityContact" />
		</if-not-empty>


		<if-not-empty field="parameters.contactNumber">
			<set value="PRIMARY_PHONE" field="newEntityContact.contactMechPurposeTypeId" />
			<set from-field="parameters.contactNumber" field="newEntityContact.contactNumber" />
			<set from-field="leadContactPartyId" field="newEntityContact.partyId" />

			<call-service service-name="createPartyTelecomNumber"
				in-map-name="newEntityContact" break-on-error="true" />
			<clear-field field="newEntityContact" />
		</if-not-empty>

		<field-to-result field="leadContactPartyId"
			result-name="partyId" />
		<field-to-result field="partyGroupPartyId" />
		<field-to-result field="parameters.roleTypeId"
			result-name="roleTypeId" />



		<if-not-empty field="parameters.address1">
			<set-service-fields service-name="createContactMech"
				map="parameters" to-map="createContactMechMap" />
			<set field="createContactMechMap.contactMechTypeId" value="POSTAL_ADDRESS" />
			<call-service service-name="createContactMech"
				in-map-name="createContactMechMap">
				<default-message>Contact Mechanism successfully created.
				</default-message>
				<result-to-field result-name="contactMechId"
					field="newValue.contactMechId" />
			</call-service>



			<set field="shipOrBillAddress.address1" from-field="parameters.address1" />
			<set field="shipOrBillAddress.address2" from-field="parameters.address2" />
			<set field="shipOrBillAddress.city" from-field="parameters.city" />
			<set field="shipOrBillAddress.stateProvinceGeoId" from-field="parameters.stateProvinceGeoId" />
			<set field="shipOrBillAddress.postalCode" from-field="parameters.postalCode" />
			<set field="shipOrBillAddress.countryGeoId" from-field="parameters.countryGeoId" />
			<set field="shipOrBillAddress.partyId" from-field="leadContactPartyId" />
			<set field="shipOrBillAddress.contactMechPurposeTypeId" value="SHIPPING_LOCATION" />
			<set field="shipOrBillAddress.contactMechId" from-field="createContactMechMap.contactMechId" />
			<call-service service-name="createPartyPostalAddress"
				in-map-name="shipOrBillAddress" />

			<set-service-fields service-name="createContactMech"
				map="parameters" to-map="createContactMechMap" />
			<set field="createContactMechMap.contactMechTypeId" value="POSTAL_ADDRESS" />
			<call-service service-name="createContactMech"
				in-map-name="createContactMechMap">
				<default-message>Contact Mechanism successfully created.
				</default-message>
				<result-to-field result-name="contactMechId"
					field="newValue.contactMechId" />
			</call-service>

			<set field="shipOrBillAddress.address1" from-field="parameters.b_address1" />
			<set field="shipOrBillAddress.address2" from-field="parameters.b_address2" />
			<set field="shipOrBillAddress.city" from-field="parameters.b_city" />
			<set field="shipOrBillAddress.stateProvinceGeoId" from-field="parameters.b_stateProvinceGeoId" />
			<set field="shipOrBillAddress.postalCode" from-field="parameters.b_postalCode" />
			<set field="shipOrBillAddress.countryGeoId" from-field="parameters.b_countryGeoId" />
			<set field="shipOrBillAddress.partyId" from-field="leadContactPartyId" />
			<set field="shipOrBillAddress.contactMechPurposeTypeId" value="BILLING_LOCATION" />
			<set field="shipOrBillAddress.contactMechId" from-field="createContactMechMap.contactMechId" />
			<call-service service-name="createPartyPostalAddress"
				in-map-name="shipOrBillAddress" />
		</if-not-empty>
		<!-- Assign Lead to Company -->

		<if-not-empty field="parameters.leadPartyId">

			<set field="assignToSfaLead.partyId" from-field="parameters.leadPartyId" />
			<set field="assignToSfaLead.partyIdTo" from-field="leadContactPartyId" />
			<set field="assignToSfaLead.roleTypeIdFrom" value="CMPNY_ASSIGNEE" />
			<set field="assignToSfaLead.roleTypeIdTo" value="PROSPECT_LEAD" />
			<set field="assignToSfaLead.partyRelationshipTypeId" value="SALES_ASSIGN" />
			<call-service service-name="assignToSfaLead"
				in-map-name="assignToSfaLead" />

		</if-not-empty>
	</simple-method>

	<simple-method method-name="convertLeadToContact"
		short-description="Convert a lead person into a contact and associated lead group to an account">
		<set field="partyId" from-field="parameters.partyId" />
		<set field="partyGroupId" from-field="parameters.partyGroupId" />
		<now-timestamp field="nowTimestamp" />


		<entity-and entity-name="PartyRelationship" list="partyRelationships"
			filter-by-date="true">
			<field-map field-name="partyIdTo" from-field="partyId" />
			<field-map field-name="roleTypeIdFrom" value="OWNER" />
			<field-map field-name="roleTypeIdTo" value="LEAD" />
			<!--
				<field-map field-name="partyRelationshipTypeId" value="LEAD_OWNER"
				/>
			-->
			<order-by field-name="-fromDate" />
		</entity-and>
		<first-from-list list="partyRelationships" entry="partyRelationship" />

		<if-empty field="partyGroupId">
			<set field="partyGroupId" value="${partyRelationship.partyIdFrom}" />
		</if-empty>
		<if-not-empty field="partyRelationship">
			<!--
				<set-service-fields service-name="deletePartyRelationship"
				map="partyRelationship" to-map="deletePartyRelationship" />
			-->
			<!--
				<set from-field="nowTimestamp"
				field="deletePartyRelationship.thruDate" />
			-->


			<set field="partyRelFields.partyIdTo" value="${partyId}" />
			<set field="partyRelFields.partyIdFrom" value="${partyRelationship.partyIdFrom}" />
			<set field="partyRelFields.roleTypeIdFrom" value="${partyRelationship.roleTypeIdFrom}" />
			<set field="partyRelFields.roleTypeIdTo" value="${partyRelationship.roleTypeIdTo}" />
			<set field="partyRelFields.fromDate" value="${partyRelationship.fromDate}" />
			<set field="partyRelFields.userLogin" value="${parameters.userLogin}" />
			<set field="partyRelFields.partyRelationshipTypeId" value="${partyRelationship.partyRelationshipTypeId}" />

			<entity-one entity-name="PartyRelationship"
				auto-field-map="true" value-field="${partyRelationship}" />
			<remove-value value-field="partyRelationship" />


			<!--
				<entity-and entity-name="SalesOpportunityRole" list="salesOpp" >
			-->
			<!-- <field-map field-name="partyId" from-field="partyId" /> -->
			<!-- <field-map field-name="roleTypeId" value="LEAD" /> -->
			<!-- </entity-and> -->
			<!--
				<remove-by-and map="salesOpp" entity-name="SalesOpportunityRole"/>
			-->

			<entity-one entity-name="PartyRole" value-field="partyRole" />
			<set field="partyRole.partyId" from-field="parameters.partyId" />
			<set field="partyRole.roleTypeId" value="LEAD" />

			<call-service service-name="deletePartyRole"
				in-map-name="partyRole" />

			<!--
				<log level="info" message="Expiring relationship
				${deletePartyRelationship}"></log>
			-->
			<!-- <clear-field field="deletePartyRelationship" /> -->
			<!-- <clear-field field="partyRelationship" /> -->


		</if-not-empty>

		<!-- Expire relation between lead company and lead person -->
		<entity-and entity-name="PartyRelationship" list="partyRelationships"
			filter-by-date="true">
			<field-map field-name="partyIdFrom" from-field="partyGroupId" />
			<field-map field-name="roleTypeIdTo" value="LEAD" />
			<field-map field-name="roleTypeIdFrom" value="ACCOUNT_LEAD" />
			<field-map field-name="partyRelationshipTypeId" value="EMPLOYMENT" />
			<order-by field-name="-fromDate" />
		</entity-and>

		<first-from-list list="partyRelationships" entry="partyRelationship" />
		<if-not-empty field="partyRelationship">
			<set-service-fields service-name="updatePartyRelationship"
				map="partyRelationship" to-map="deletePartyRelationship" />
			<set from-field="nowTimestamp" field="deletePartyRelationship.thruDate" />
			<call-service service-name="updatePartyRelationship"
				in-map-name="deletePartyRelationship" />
			<clear-field field="deletePartyRelationship" />
			<clear-field field="partyRelationship" />
		</if-not-empty>

		<!-- Expire relation between lead company and its owner -->
		<entity-and entity-name="PartyRelationship" list="partyRelationships"
			filter-by-date="true">
			<field-map field-name="partyIdFrom" from-field="userLogin.partyId" />
			<field-map field-name="partyIdTo" from-field="partyGroupPartyId" />
			<field-map field-name="roleTypeIdTo" value="ACCOUNT_LEAD" />
			<field-map field-name="roleTypeIdFrom" value="OWNER" />
			<order-by field-name="-fromDate" />
		</entity-and>
		<first-from-list list="partyRelationships" entry="partyRelationship" />
		<if-not-empty field="partyRelationship">
			<set-service-fields service-name="updatePartyRelationship"
				map="partyRelationship" to-map="deletePartyRelationship" />
			<set from-field="nowTimestamp" field="deletePartyRelationship.thruDate" />
			<call-service service-name="updatePartyRelationship"
				in-map-name="deletePartyRelationship" />
			<clear-field field="deletePartyRelationship" />
			<clear-field field="partyRelationship" />
		</if-not-empty>

		<set field="partyRoleCtx.partyId" from-field="partyGroupId" />
		<set field="partyRoleCtx.roleTypeId" value="ACCOUNT" />
		<call-service service-name="createPartyRole" in-map-name="partyRoleCtx" />

		<set field="partyRelationshipCtx.partyIdFrom" from-field="userLogin.partyId" />
		<set field="partyRelationshipCtx.partyIdTo" from-field="partyGroupId" />
		<set field="partyRelationshipCtx.roleTypeIdFrom" value="OWNER" />
		<set field="partyRelationshipCtx.roleTypeIdTo" value="ACCOUNT" />
		<set field="partyRelationshipCtx.partyRelationshipTypeId" value="ACCOUNT" />
		<call-service service-name="createPartyRelationship"
			in-map-name="partyRelationshipCtx" />
		<clear-field field="partyRelationshipCtx" />

		<set field="updatePartyCtx.partyId" from-field="partyGroupId" />
		<set field="updatePartyCtx.statusId" value="LEAD_CONVERTED" />
		<call-service service-name="setPartyStatus" in-map-name="updatePartyCtx" />

		<set field="createPartyRoleCtx.partyId" from-field="partyId" />
		<set field="createPartyRoleCtx.roleTypeId" value="CONTACT" />
		<call-service service-name="createPartyRole" in-map-name="createPartyRoleCtx" />
		<!--
			create new relationship between new account and contact person there
		-->
		<set field="partyRelationshipCtx.partyIdFrom" from-field="partyGroupId" />
		<set field="partyRelationshipCtx.roleTypeIdFrom" value="ACCOUNT" />
		<set field="partyRelationshipCtx.partyIdTo" from-field="partyId" />
		<set field="partyRelationshipCtx.roleTypeIdTo" value="CONTACT" />
		<set field="partyRelationshipCtx.partyRelationshipTypeId" value="EMPLOYMENT" />
		<call-service service-name="createPartyRelationship"
			in-map-name="partyRelationshipCtx" />

		<clear-field field="partyRelationshipCtx" />
		<set field="updatePartyCtx.partyId" from-field="partyId" />
		<set field="updatePartyCtx.statusId" value="LEAD_CONVERTED" />
		<call-service service-name="setPartyStatus" in-map-name="updatePartyCtx" />

		<field-to-result field="partyId" />
		<field-to-result field="partyGroupId" />
		<set field="successMessage"
			value="Lead ${partyGroupId} ${partyId}  succesfully converted to Account/Contact" />
	</simple-method>

	<simple-method method-name="assignToSfaLead"
		short-description="Assign Companies to Leads">
		<set field="partyIdFrom" value="${parameters.partyId}" type="String" />
		<set field="partyIdTo" value="${parameters.partyIdTo}" type="String" />

		<entity-and entity-name="PartyRole" list="partyRole">
			<field-map field-name="partyId" value="${parameters.partyId}" />
		</entity-and>

		<first-from-list list="partyRole" entry="partyRoles" />

		<entity-one value-field="partyRoleEntity" entity-name="PartyRole" />
		<set field="partyRoleEntity.partyId" value="${parameters.partyIdTo}" />
		<set field="partyRoleEntity.roleTypeId" value="CMPNY_ASSIGNEE" />
		<create-value value-field="partyRoleEntity" />

		<log level="always"
			message="====================####################CMPNY_ASSIGNEE ${partyRoleEntity}=====================" />
		<now-timestamp field="fromDate" />
		<set field="partyRelationshipCtx.partyIdFrom" value="${parameters.partyId}" />
		<set field="partyRelationshipCtx.partyId" value="${parameters.partyId}" />
		<set field="partyRelationshipCtx.partyIdTo" value="${parameters.partyIdTo}" />
		<set field="partyRelationshipCtx.roleTypeIdFrom" value="${partyRoles.roleTypeId}" />
		<set field="partyRelationshipCtx.roleTypeIdTo" value="CMPNY_ASSIGNEE" />
		<!-- <now-timestamp field="nowTimestamp" /> -->
		<!--
			<set field="partyRelationshipCtx.fromDate" from-field="nowTimestamp"
			/>
		-->

		<call-service service-name="createPartyRelationship"
			in-map-name="partyRelationshipCtx" />

		<!--
			<set field="updatePartyStatusCtx.partyId" from-field="partyIdFrom" />
		-->
		<!--
			<set field="updatePartyStatusCtx.statusId" value="SALES_ASSIGN" />
		-->
		<!--
			<call-service service-name="setPartyStatus"
			in-map-name="updatePartyStatusCtx" />
		-->
	</simple-method>
	<simple-method method-name="linkUserLoginToSecurityGroup"
		short-description="Create Required Security Group">
		<set field="userLoginId" value="${parameters.userLoginId}" type="String" />
		<set field="groupId" value="${parameters.groupId}" type="String" />
	</simple-method>

	<simple-method method-name="updateLeadInfo"
		short-description="Update Lead Info">
		<make-value value-field="newEntity" entity-name="Party" />
		<set value="${parameters.partyId}" field="newEntity.partyId" />
		<set from-field="parameters.industryType" field="newEntity.industryType" />
		<set from-field="parameters.industrySubType" field="newEntity.industrySubType" />
		<set from-field="parameters.preferredCurrencyUomId" field="newEntity.preferredCurrencyUomId" />
		<set from-field="parameters.annualRevenue" field="newEntity.annualRevenue" />
		<set from-field="parameters.revenueSlab" field="newEntity.revenueSlab" />
		<set from-field="parameters.salesTurnOver" field="newEntity.salesTurnOver" />
		<set from-field="parameters.transactionalSideId" field="newEntity.transactionalSideId" />
		<store-value value-field="newEntity" />

		<clear-field field="newEntity" />

		<make-value entity-name="Person" value-field="newEntity" />
		<set value="${parameters.partyId}" field="newEntity.partyId" />
		<set from-field="parameters.firstName" field="newEntity.firstName" />
		<store-value value-field="newEntity" />
	</simple-method>
</simple-methods>
